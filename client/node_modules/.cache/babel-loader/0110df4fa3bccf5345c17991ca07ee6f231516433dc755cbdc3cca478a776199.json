{"ast":null,"code":"import { time } from '@motionone/utils';\nimport { defaults } from './defaults.es.js';\nimport { calcDampingRatio } from './utils.es.js';\nimport { hasReachedTarget } from '../utils/has-reached-target.es.js';\nimport { calcGeneratorVelocity } from '../utils/velocity.es.js';\nvar spring = function spring() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$stiffness = _ref.stiffness,\n    stiffness = _ref$stiffness === void 0 ? defaults.stiffness : _ref$stiffness,\n    _ref$damping = _ref.damping,\n    damping = _ref$damping === void 0 ? defaults.damping : _ref$damping,\n    _ref$mass = _ref.mass,\n    mass = _ref$mass === void 0 ? defaults.mass : _ref$mass,\n    _ref$from = _ref.from,\n    from = _ref$from === void 0 ? 0 : _ref$from,\n    _ref$to = _ref.to,\n    to = _ref$to === void 0 ? 1 : _ref$to,\n    _ref$velocity = _ref.velocity,\n    velocity = _ref$velocity === void 0 ? 0.0 : _ref$velocity,\n    restSpeed = _ref.restSpeed,\n    restDistance = _ref.restDistance;\n  velocity = velocity ? time.s(velocity) : 0.0;\n  var state = {\n    done: false,\n    hasReachedTarget: false,\n    current: from,\n    target: to\n  };\n  var initialDelta = to - from;\n  var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n  var dampingRatio = calcDampingRatio(stiffness, damping, mass);\n  var isGranularScale = Math.abs(initialDelta) < 5;\n  restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n  restDistance || (restDistance = isGranularScale ? 0.005 : 0.5);\n  var resolveSpring;\n  if (dampingRatio < 1) {\n    var angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n    // Underdamped spring (bouncy)\n    resolveSpring = function resolveSpring(t) {\n      return to - Math.exp(-dampingRatio * undampedAngularFreq * t) * ((-velocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t) + initialDelta * Math.cos(angularFreq * t));\n    };\n  } else {\n    // Critically damped spring\n    resolveSpring = function resolveSpring(t) {\n      return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t);\n    };\n  }\n  return function (t) {\n    state.current = resolveSpring(t);\n    var currentVelocity = t === 0 ? velocity : calcGeneratorVelocity(resolveSpring, t, state.current);\n    var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n    var isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;\n    state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n    state.hasReachedTarget = hasReachedTarget(from, to, state.current);\n    return state;\n  };\n};\nexport { spring };","map":{"version":3,"names":["time","defaults","calcDampingRatio","hasReachedTarget","calcGeneratorVelocity","spring","_ref","arguments","length","undefined","_ref$stiffness","stiffness","_ref$damping","damping","_ref$mass","mass","_ref$from","from","_ref$to","to","_ref$velocity","velocity","restSpeed","restDistance","s","state","done","current","target","initialDelta","undampedAngularFreq","Math","sqrt","dampingRatio","isGranularScale","abs","resolveSpring","angularFreq","t","exp","sin","cos","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold"],"sources":["/Users/tina/Documents/Develop/FYP/my-fyp/node_modules/@motionone/generators/dist/spring/index.es.js"],"sourcesContent":["import { time } from '@motionone/utils';\nimport { defaults } from './defaults.es.js';\nimport { calcDampingRatio } from './utils.es.js';\nimport { hasReachedTarget } from '../utils/has-reached-target.es.js';\nimport { calcGeneratorVelocity } from '../utils/velocity.es.js';\n\nconst spring = ({ stiffness = defaults.stiffness, damping = defaults.damping, mass = defaults.mass, from = 0, to = 1, velocity = 0.0, restSpeed, restDistance, } = {}) => {\n    velocity = velocity ? time.s(velocity) : 0.0;\n    const state = {\n        done: false,\n        hasReachedTarget: false,\n        current: from,\n        target: to,\n    };\n    const initialDelta = to - from;\n    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    const dampingRatio = calcDampingRatio(stiffness, damping, mass);\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDistance || (restDistance = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n        // Underdamped spring (bouncy)\n        resolveSpring = (t) => to -\n            Math.exp(-dampingRatio * undampedAngularFreq * t) *\n                (((-velocity + dampingRatio * undampedAngularFreq * initialDelta) /\n                    angularFreq) *\n                    Math.sin(angularFreq * t) +\n                    initialDelta * Math.cos(angularFreq * t));\n    }\n    else {\n        // Critically damped spring\n        resolveSpring = (t) => {\n            return (to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t));\n        };\n    }\n    return (t) => {\n        state.current = resolveSpring(t);\n        const currentVelocity = t === 0\n            ? velocity\n            : calcGeneratorVelocity(resolveSpring, t, state.current);\n        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        const isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n        state.hasReachedTarget = hasReachedTarget(from, to, state.current);\n        return state;\n    };\n};\n\nexport { spring };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}