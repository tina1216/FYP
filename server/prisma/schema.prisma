generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      Int
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id           Int            @id @default(autoincrement())
  userId       String         @unique
  password     String
  email        String         @unique
  role         Role           @default(USER)
  RefreshToken RefreshToken[]
  elections    ElectionUser[]
  Otp          Otp[]
  updatedAt    DateTime       @updatedAt
}

// OTP
model Otp {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime @db.Timestamp(5)
}

model Election {
  id             Int            @id @default(autoincrement())
  electionName   String
  electionStatus Status         @default(UPCOMING)
  Candidate      Candidate[]
  Vote           Vote[]
  Users          ElectionUser[]
}

// Add a new model for the many-to-many relationship between User and Election
model ElectionUser {
  id         Int      @id @default(autoincrement())
  userId     Int
  electionId Int
  user       User     @relation(fields: [userId], references: [id])
  election   Election @relation(fields: [electionId], references: [id])
  hasVoted   Boolean
}

// a candidate in an election
// related to an election
model Candidate {
  id            Int      @id @default(autoincrement())
  electionId    Int
  candidateName String
  detail        String?
  Election      Election @relation(fields: [electionId], references: [id])
}

// a vote by a user
// encrypted vote is candidateId
model Vote {
  id            Int      @id @default(autoincrement())
  userId        Int
  electionId    Int
  encryptedVote String
  createdAt     DateTime @default(now())
  Election      Election @relation(fields: [electionId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  CLOSED
  UPCOMING
}
